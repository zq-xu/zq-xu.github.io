import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.48927342.js";const f=JSON.parse('{"title":"Float类型处理","description":"","frontmatter":{"tag":["Golang"],"categories":["Golang"],"recommend":1},"headers":[],"relativePath":"zh/coding/golang/practice/float.md","filePath":"zh/coding/golang/practice/float.md"}'),p={name:"zh/coding/golang/practice/float.md"},o=l(`<h1 id="float类型处理" tabindex="-1">Float类型处理 <a class="header-anchor" href="#float类型处理" aria-label="Permalink to &quot;Float类型处理&quot;">​</a></h1><p>使用<code>Golang</code>原生库进行<code>Float</code>类型数据处理的时候，常常会遇到数据失真的问题。</p><p>以下引用<a href="http://c.biancheng.net/view/14.html" target="_blank" rel="noreferrer">Go语言浮点类型（小数类型）</a>简要介绍一下<code>Golang</code>中的<code>Float</code>类型：</p><blockquote><p>Go语言提供了两种精度的浮点数 float32 和 float64，它们的算术规范由 IEEE754 浮点数国际标准定义，该浮点数规范被所有现代的 CPU 支持。</p></blockquote><blockquote><p>这些浮点数类型的取值范围可以从很微小到很巨大。浮点数取值范围的极限值可以在 math 包中找到： 常量 math.MaxFloat32 表示 float32 能取到的最大数值，大约是 3.4e38； 常量 math.MaxFloat64 表示 float64 能取到的最大数值，大约是 1.8e308； float32 和 float64 能表示的最小值分别为 1.4e-45 和 4.9e-324。</p><p>一个 float32 类型的浮点数可以提供大约 6 个十进制数的精度，而 float64 则可以提供约 15 个十进制数的精度，通常应该优先使用 float64 类型，因为 &gt; &gt; float32 类型的累计计算误差很容易扩散，并且 float32 能精确表示的正整数并不是很大。</p></blockquote><p>更多资料可参考：</p><ul><li><a href="https://github.com/kingreatwill/open/blob/master/golang/float.md" target="_blank" rel="noreferrer">Golang 笔记之深入浮点数</a>：详细解释<code>Golang</code>中的<code>Float</code>类型；</li><li><a href="https://github.com/shopspring/decimal" target="_blank" rel="noreferrer">shopspring/decimal</a>：用于解析<code>Golang</code>中<code>Float</code>类型数据的开源项目。</li></ul><p>此处引用开源库<code>shopspring/decimal</code>演示<code>Golang</code>中<code>Float</code>类型（以<code>float64</code>为例）的处理。</p><h2 id="输出保留n位小数的字符串" tabindex="-1">输出保留N位小数的字符串 <a class="header-anchor" href="#输出保留n位小数的字符串" aria-label="Permalink to &quot;输出保留N位小数的字符串&quot;">​</a></h2><p>代码如下：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/shopspring/decimal</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12345</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		rawFmt </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> fmt.</span><span style="color:#79B8FF;">Sprintf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fmt </span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;"> float64 is </span><span style="color:#79B8FF;">%%</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">f</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, i, i)</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(rawFmt, a)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">		decimalFmt </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> fmt.</span><span style="color:#79B8FF;">Sprintf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;decimal </span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;"> float64 is </span><span style="color:#79B8FF;">%%</span><span style="color:#9ECBFF;">s</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, i)</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(decimalFmt, decimal.</span><span style="color:#79B8FF;">NewFromFloat</span><span style="color:#E1E4E8;">(a).</span><span style="color:#79B8FF;">StringFixed</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">int32</span><span style="color:#E1E4E8;">(i)))</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/shopspring/decimal</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">float64</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12345</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		rawFmt </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> fmt.</span><span style="color:#005CC5;">Sprintf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fmt </span><span style="color:#005CC5;">%d</span><span style="color:#032F62;"> float64 is </span><span style="color:#005CC5;">%%</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">f</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, i, i)</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(rawFmt, a)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		decimalFmt </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> fmt.</span><span style="color:#005CC5;">Sprintf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;decimal </span><span style="color:#005CC5;">%d</span><span style="color:#032F62;"> float64 is </span><span style="color:#005CC5;">%%</span><span style="color:#032F62;">s</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, i)</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(decimalFmt, decimal.</span><span style="color:#005CC5;">NewFromFloat</span><span style="color:#24292E;">(a).</span><span style="color:#005CC5;">StringFixed</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">int32</span><span style="color:#24292E;">(i)))</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>输出如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12345000</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12345000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.123450000</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.123450000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.1234500000</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.1234500000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12345000000</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12345000000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.123449999999</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.123450000000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.1234499999991</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.1234500000000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12344999999914</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12345000000000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.123449999999139</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.123450000000000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.1234499999991385</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.1234500000000000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12344999999913853</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.12345000000000000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.123449999999138527</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.123450000000000000</span></span>
<span class="line"><span style="color:#B392F0;">fmt</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">19</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.1234499999991385266</span></span>
<span class="line"><span style="color:#B392F0;">decimal</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">19</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">float64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12345.1234500000000000000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12345000</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12345000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.123450000</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.123450000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.1234500000</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.1234500000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12345000000</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12345000000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.123449999999</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.123450000000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.1234499999991</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.1234500000000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12344999999914</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12345000000000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.123449999999139</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.123450000000000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.1234499999991385</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.1234500000000000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12344999999913853</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.12345000000000000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.123449999999138527</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.123450000000000000</span></span>
<span class="line"><span style="color:#6F42C1;">fmt</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">19</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.1234499999991385266</span></span>
<span class="line"><span style="color:#6F42C1;">decimal</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">19</span><span style="color:#24292E;"> </span><span style="color:#032F62;">float64</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12345.1234500000000000000</span></span></code></pre></div><h2 id="使用go原生库处理float64类型" tabindex="-1">使用Go原生库处理Float64类型 <a class="header-anchor" href="#使用go原生库处理float64类型" aria-label="Permalink to &quot;使用Go原生库处理Float64类型&quot;">​</a></h2><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">utils</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">math</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">strconv</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Decimal float64 Keep the decimal places</span></span>
<span class="line"><span style="color:#6A737D;">// value float64 the incoming parameter</span></span>
<span class="line"><span style="color:#6A737D;">// prec int Keep the number of digits after the decimal point</span></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Decimal</span><span style="color:#E1E4E8;">(number </span><span style="color:#F97583;">float64</span><span style="color:#E1E4E8;">, prec </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">float64</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	number, _ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> strconv.</span><span style="color:#79B8FF;">ParseFloat</span><span style="color:#E1E4E8;">(strconv.</span><span style="color:#79B8FF;">FormatFloat</span><span style="color:#E1E4E8;">(number, </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">f</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">, prec, </span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> number</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// RoundFloat64 float64 Keep the decimal places</span></span>
<span class="line"><span style="color:#6A737D;">// value float64 the incoming parameter</span></span>
<span class="line"><span style="color:#6A737D;">// prec int Keep the number of digits after the decimal point</span></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RoundFloat64</span><span style="color:#E1E4E8;">(number </span><span style="color:#F97583;">float64</span><span style="color:#E1E4E8;">, decimalPlaces </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">float64</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	shift </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> math.</span><span style="color:#79B8FF;">Pow</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">float64</span><span style="color:#E1E4E8;">(decimalPlaces))</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> math.</span><span style="color:#79B8FF;">Round</span><span style="color:#E1E4E8;">(number</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">shift) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> shift</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// TruncateFloat64 float64 Keep the decimal places and drop the extra digits</span></span>
<span class="line"><span style="color:#6A737D;">// value float64 the incoming parameter</span></span>
<span class="line"><span style="color:#6A737D;">// prec int Keep the number of digits after the decimal point</span></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TruncateFloat64</span><span style="color:#E1E4E8;">(number </span><span style="color:#F97583;">float64</span><span style="color:#E1E4E8;">, prec </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">float64</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	scale </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1.0</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> prec; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		scale </span><span style="color:#F97583;">*=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10.0</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">float64</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(number</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">scale)) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> scale</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">utils</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">math</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">strconv</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Decimal float64 Keep the decimal places</span></span>
<span class="line"><span style="color:#6A737D;">// value float64 the incoming parameter</span></span>
<span class="line"><span style="color:#6A737D;">// prec int Keep the number of digits after the decimal point</span></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Decimal</span><span style="color:#24292E;">(number </span><span style="color:#D73A49;">float64</span><span style="color:#24292E;">, prec </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">float64</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	number, _ </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> strconv.</span><span style="color:#005CC5;">ParseFloat</span><span style="color:#24292E;">(strconv.</span><span style="color:#005CC5;">FormatFloat</span><span style="color:#24292E;">(number, </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">f</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">, prec, </span><span style="color:#005CC5;">64</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">64</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> number</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// RoundFloat64 float64 Keep the decimal places</span></span>
<span class="line"><span style="color:#6A737D;">// value float64 the incoming parameter</span></span>
<span class="line"><span style="color:#6A737D;">// prec int Keep the number of digits after the decimal point</span></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RoundFloat64</span><span style="color:#24292E;">(number </span><span style="color:#D73A49;">float64</span><span style="color:#24292E;">, decimalPlaces </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">float64</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	shift </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> math.</span><span style="color:#005CC5;">Pow</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">float64</span><span style="color:#24292E;">(decimalPlaces))</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> math.</span><span style="color:#005CC5;">Round</span><span style="color:#24292E;">(number</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">shift) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> shift</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// TruncateFloat64 float64 Keep the decimal places and drop the extra digits</span></span>
<span class="line"><span style="color:#6A737D;">// value float64 the incoming parameter</span></span>
<span class="line"><span style="color:#6A737D;">// prec int Keep the number of digits after the decimal point</span></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TruncateFloat64</span><span style="color:#24292E;">(number </span><span style="color:#D73A49;">float64</span><span style="color:#24292E;">, prec </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">float64</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	scale </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.0</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> prec; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		scale </span><span style="color:#D73A49;">*=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10.0</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">float64</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(number</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">scale)) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> scale</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,15),e=[o];function t(c,r,y,E,F,i){return a(),n("div",null,e)}const B=s(p,[["render",t]]);export{f as __pageData,B as default};
