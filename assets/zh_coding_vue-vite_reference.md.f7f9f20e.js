import{_ as e,o as r,c as a,Q as t}from"./chunks/framework.48927342.js";const b=JSON.parse('{"title":"Vue & Vite参考资源","description":"","frontmatter":{"sticky":997,"date":"2022-08-31T00:00:00.000Z","tags":["Vue","Vite"],"categories":["Web"],"recommend":2},"headers":[],"relativePath":"zh/coding/vue-vite/reference.md","filePath":"zh/coding/vue-vite/reference.md"}'),o={name:"zh/coding/vue-vite/reference.md"},i=t('<h1 id="vue-vite参考资源" tabindex="-1">Vue &amp; Vite参考资源 <a class="header-anchor" href="#vue-vite参考资源" aria-label="Permalink to &quot;Vue &amp; Vite参考资源&quot;">​</a></h1><p>如果是新手入门，建议大概了解<code>Vue</code>的基础之后，从一款开箱即用的<a href="#vue框架">Vue框架</a>开始实践。</p><p>在实践中学习，比较容易找到感觉和成就感，继而再深入学习相应的原理，效率或许会高很多。</p><h2 id="vue基础" tabindex="-1">Vue基础 <a class="header-anchor" href="#vue基础" aria-label="Permalink to &quot;Vue基础&quot;">​</a></h2><ul><li><a href="https://vue3.chengpeiquan.com/" target="_blank" rel="noreferrer">Vue3 入门指南与实战案例</a>：个人感觉对<code>Vue</code>的讲解十分清晰，我从这份文档学习到了很多；</li><li><a href="https://www.liujiangblog.com/course/Vue3/" target="_blank" rel="noreferrer">Vue3教程</a>：个人在这个教程中找到过一些细节的参考，具体教程没有详细了解；</li><li><a href="https://cn.vuejs.org/guide/introduction.html" target="_blank" rel="noreferrer">Vue.js</a>：<code>Vue</code>官方文档，有<code>Vue</code>的较为详细的介绍；</li><li><a href="https://cn.vitejs.dev/" target="_blank" rel="noreferrer">Vite</a>：一款高性能前端构建工具，一般用于搭配<code>Vue</code>进行项目构建。</li></ul><h2 id="vue框架" tabindex="-1">Vue框架 <a class="header-anchor" href="#vue框架" aria-label="Permalink to &quot;Vue框架&quot;">​</a></h2><p>社区中有很多开箱即用的基于Vue的前端框架，个人有时会参考多个框架来做一些前端的设计及实现，以下是一些个人搜集：</p><ul><li><a href="https://github.com/vuejs-templates" target="_blank" rel="noreferrer">vuejs-templates</a>：Vue官方推荐的适用于从零开始构建Vue项目的一些模板；</li><li><a href="https://github.com/honghuangdc/soybean-admin" target="_blank" rel="noreferrer">Soybean Admin</a>：基于<code>Vue3</code>、<code>Vite3</code>、<code>TypeScript</code>、<code>NaiveUI</code>、<code>Pinia</code> 和 <code>UnoCSS</code>的清新优雅的中后台模版,代码比较整洁，强迫症表示比较舒服，但是功能比较有限，还在持续开发中(是我目前最为中意的前端框架)；</li><li><a href="https://github.com/jekip/naive-ui-admin" target="_blank" rel="noreferrer">Naive Ui Admin</a>：完全免费，且可商用，基于<code>Vue3.0</code>、<code>Vite</code>、<code>Naive UI</code>、<code>TypeScript</code>的中后台解决方案，功能强大，简洁美观； -<a href="https://github.com/PanJiaChen/vue-element-admin/" target="_blank" rel="noreferrer">vue-element-admin</a>：基于<code>Vue</code>和<code>Element-UI</code>实现，功能强大，界面简洁； -<a href="https://github.com/vbenjs/vue-vben-admin" target="_blank" rel="noreferrer">Vue vben admin</a>：基于<code>Vue3</code>、<code>Vite2</code>、<code>TypeScript</code>等主流技术开发。个人使用过，功能非常强大，但比较笨重，代码比较杂乱；</li><li><a href="https://github.com/vueComponent/ant-design-vue-pro" target="_blank" rel="noreferrer">Ant Design Vue Pro</a>：功能强大，但貌似是收费项目，且维护以及兼容性貌似不太好，个人没有深入体验；</li><li><a href="https://github.com/kailong321200875/vue-element-plus-admin" target="_blank" rel="noreferrer">vue-element-plus-admin</a>：基于<code>Vue3</code>、<code>Vite4</code>、<code>Element-Plus</code>、<code>TypeScript</code>等技术开发，开箱即用的中后台前端解决方案，功能强大，简洁美观；</li><li><a href="https://github.com/newbee-ltd/vue3-admin" target="_blank" rel="noreferrer">Vue3-Admin</a>：这是我在做ERP的时候无意发现的一个模板，预览地址并不丝滑，仅做参考；</li><li><a href="https://github.com/qingqingxuan/admin-work" target="_blank" rel="noreferrer">Admin Work</a>：基于<code>Vue3</code>、<code>Vite2</code>、<code>Typescript</code>、<code>Navie UI</code>开发，功能强大。</li></ul><h2 id="vue组件库" tabindex="-1">Vue组件库 <a class="header-anchor" href="#vue组件库" aria-label="Permalink to &quot;Vue组件库&quot;">​</a></h2><p>社区中有很多基于Vue的组件库，主要提供一些基本的页面组件个人搜集如下(个人偏好在一个项目中使用同一个组件库的组件)：</p><ul><li><a href="https://www.naiveui.com/zh-CN/os-theme" target="_blank" rel="noreferrer">Naive UI</a>：功能健全，美观简洁(是我非常喜欢的一个组件库);</li><li><a href="https://element-plus.org/zh-CN/" target="_blank" rel="noreferrer">Element Plus</a>：功能强大，美观简洁；</li><li><a href="https://antdv.com/components/overview" target="_blank" rel="noreferrer">Ant Design Vue</a>：功能强大，但貌似是个收费的组件库。</li></ul><h2 id="vue组件" tabindex="-1">Vue组件 <a class="header-anchor" href="#vue组件" aria-label="Permalink to &quot;Vue组件&quot;">​</a></h2><p>社区中有一些功能强大或者比较酷炫的大型组件(<a href="#vue框架">Vue框架</a>中可能有引用)，个人搜集如下：</p><ul><li><a href="https://github.com/nolimits4web/swiper" target="_blank" rel="noreferrer">Swiper</a>：免费且最现代的移动触摸滑块，仅专注于现代应用程序/平台，以带来最佳体验和简单性；</li><li><a href="https://github.com/xtermjs/xterm.js/" target="_blank" rel="noreferrer">Xterm.js</a>：是一个用 TypeScript 编写的前端组件，可让应用程序在浏览器中为用户提供功能齐全的终端,常用于接口的长连接，实现页面操作终端的效果；</li><li><a href="https://github.com/samzhangjy/VueTerm" target="_blank" rel="noreferrer">VueTerm</a>：一个类似 Ubuntu 的终端组合站点，使用<code>Vue3</code>和<code>TypeScript</code>构建,文档在完善中；</li><li><a href="https://github.com/haozheyu/k8s_dashboard" target="_blank" rel="noreferrer">k8s_dashboard</a>：连接k8s的pod的一个项目，是我做k8s远程连接的最初的参考(代码尚未公开到Github)；</li><li><a href="https://github.com/x-extends/vxe-table" target="_blank" rel="noreferrer">vxe-table</a>：一个基于<code>Vue</code>的PC端表格组件,功能十分强大；</li><li><a href="https://github.com/gruhn/vue-qrcode-reader" target="_blank" rel="noreferrer">vue-qrcode-reader</a>：一组 Vue.js 组件，允许您在不离开浏览器的情况下检测和解码二维码。</li><li><a href="https://blog.csdn.net/m0_50864962/article/details/125600533" target="_blank" rel="noreferrer">使用html5-qrcode 扫描二维码(vue3)</a>:扫描条形码/二维码的实践,我有参考这个实践过条形码的扫描(代码尚未公开到Github)；</li></ul><h2 id="更多资源" tabindex="-1">更多资源 <a class="header-anchor" href="#更多资源" aria-label="Permalink to &quot;更多资源&quot;">​</a></h2><p>更多前端资源参考<a href="/zh/more/resource-share.html">资源分享</a>。</p>',16),l=[i];function n(c,u,d,h,s,m){return r(),a("div",null,l)}const f=e(o,[["render",n]]);export{b as __pageData,f as default};
